{"ast":null,"code":"import _assertThisInitialized from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/djangdal/Documents/random-daily/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { Button } from 'elemental';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(LoadingButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar LoadingButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoadingButton, _React$Component);\n\n  function LoadingButton(props, context) {\n    var _this;\n\n    _classCallCheck(this, LoadingButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoadingButton).call(this, props, context));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoadingButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); // This probably where you would have an `ajax` call\n\n      setTimeout(function () {\n        // Completed of async action, set loading state back\n        _this2.setState({\n          isLoading: false\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      return React.createElement(Button, {\n        bsStyle: \"primary\",\n        disabled: isLoading,\n        onClick: !isLoading ? this.handleClick : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, isLoading ? 'Loading...' : 'Loading state');\n    }\n  }]);\n\n  return LoadingButton;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/djangdal/Documents/random-daily/src/App.js"],"names":["React","Component","Button","App","LoadingButton","props","context","handleClick","bind","state","isLoading","setState","setTimeout"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAReF,S;;IAWZG,a;;;;;AACJ,yBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,uFAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAL0B;AAQ3B;;;;kCAEa;AAAA;;AACZ,WAAKC,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd,EADY,CAGZ;;AACAE,MAAAA,UAAU,CAAC,YAAM;AACf;AACA,QAAA,MAAI,CAACD,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAHS,EAGP,IAHO,CAAV;AAID;;;6BAEQ;AAAA,UACCA,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAGP,aACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,QAAQ,EAAEA,SAFZ;AAGE,QAAA,OAAO,EAAE,CAACA,SAAD,GAAa,KAAKH,WAAlB,GAAgC,IAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGG,SAAS,GAAG,YAAH,GAAkB,eAL9B,CADF;AASD;;;;EAjCyBV,KAAK,CAACC,S;;AAmClC,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Button } from 'elemental'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n  \n        <LoadingButton/>\n      </div>\n    );\n  }\n}\n\nclass LoadingButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  handleClick() {\n    this.setState({ isLoading: true });\n\n    // This probably where you would have an `ajax` call\n    setTimeout(() => {\n      // Completed of async action, set loading state back\n      this.setState({ isLoading: false });\n    }, 2000);\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <Button\n        bsStyle=\"primary\"\n        disabled={isLoading}\n        onClick={!isLoading ? this.handleClick : null}\n      >\n        {isLoading ? 'Loading...' : 'Loading state'}\n      </Button>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}