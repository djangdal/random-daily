{"ast":null,"code":"import _classCallCheck from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/djangdal/Documents/random-daily/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/djangdal/Documents/random-daily/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(LoadingButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar LoadingButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoadingButton, _React$Component);\n\n  function LoadingButton() {\n    _classCallCheck(this, LoadingButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoadingButton).apply(this, arguments));\n  }\n\n  _createClass(LoadingButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this = this;\n\n      this.setState({\n        isLoading: true\n      }); // This probably where you would have an `ajax` call\n\n      setTimeout(function () {\n        // Completed of async action, set loading state back\n        _this.setState({\n          isLoading: false\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      return React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Get Random Daily\");\n    }\n  }]);\n\n  return LoadingButton;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/djangdal/Documents/random-daily/src/App.js"],"names":["React","Component","App","LoadingButton","setState","isLoading","setTimeout","state","handleClick"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAReD,S;;IAWZE,a;;;;;;;;;;;;;kCAEU;AAAA;;AACZ,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd,EADY,CAGZ;;AACAC,MAAAA,UAAU,CAAC,YAAM;AACf;AACA,QAAA,KAAI,CAACF,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAHS,EAGP,IAHO,CAAV;AAID;;;6BAEQ;AAAA,UACCA,SADD,GACe,KAAKE,KADpB,CACCF,SADD;AAGP,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF;AAGD;;;;EAlByBR,KAAK,CAACC,S;;AAoBlC,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n  \n        <LoadingButton/>\n      </div>\n    );\n  }\n}\n\nclass LoadingButton extends React.Component {\n  \n  handleClick() {\n    this.setState({ isLoading: true });\n\n    // This probably where you would have an `ajax` call\n    setTimeout(() => {\n      // Completed of async action, set loading state back\n      this.setState({ isLoading: false });\n    }, 2000);\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <button onClick={this.handleClick} >Get Random Daily</button>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}